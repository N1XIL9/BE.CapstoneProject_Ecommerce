@model CapstoneProject_Ecommerce.Models.ORDINE

@{
    ViewBag.Title = "Edit";
}

<h2>MODIFICA QUESTO ORDINE</h2>

<div class="container" id="ContEdit">

    <div>
        @Html.ActionLink("Ritorna all'ordine", "Index")
    </div>

    <hr />

    @using (Html.BeginForm())
    {
        @Html.AntiForgeryToken()

        <div class="form-horizontal">

            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
            @Html.HiddenFor(model => model.IdOrdine)


            <div class="form-group mx-5 mb-2">
                @Html.LabelFor(model => model.IdUser, "IdUser", htmlAttributes: new { @class = "control-label" })
                <div>
                    @Html.DropDownList("IdUser", null, htmlAttributes: new { @class = "form-control", @style = " width:100%" })
                    @Html.ValidationMessageFor(model => model.IdUser, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group mx-5 mb-2">
                @Html.LabelFor(model => model.Confermato, htmlAttributes: new { @class = "control-label" })
                <div>
                    @Html.EditorFor(model => model.Confermato, new { htmlAttributes = new { @class = "form-control", @style = " width:100%" } })
                    @Html.ValidationMessageFor(model => model.Confermato, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group mx-5 mb-2">
                @Html.LabelFor(model => model.DataOrdine, htmlAttributes: new { @class = "control-label" })
                <div>
                    @{Html.EnableClientValidation(false);}
                    @Html.EditorFor(model => model.DataOrdine, new { htmlAttributes = new { @class = "form-control", @style = " width:100%" } })
                    @{Html.EnableClientValidation(true);}

                </div>
            </div>

            <div class="form-group mx-5 mb-2">
                @Html.LabelFor(model => model.ImportoTotale, htmlAttributes: new { @class = "control-label" })
                <div>
                    @{Html.EnableClientValidation(false);}
                    @Html.EditorFor(model => model.ImportoTotale, new { htmlAttributes = new { @class = "form-control", @style = " width:100%" } })
                    @{Html.EnableClientValidation(true);}

                </div>
            </div>

            <div class="form-group mx-5 mb-2">
                @Html.LabelFor(model => model.Evaso, htmlAttributes: new { @class = "control-label" })
                <div>
                    @Html.EditorFor(model => model.Evaso, new { htmlAttributes = new { @class = "form-control", @style = " width:100%" } })
                    @Html.ValidationMessageFor(model => model.Evaso, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>

            <div class="form-group">
                <div class="col-md-offset-2 col-md-10 text-center mt-5" id="contBtn" style="width: 100%">
                    <input type="submit" value="SALVA" class="btn btn-default" />
                </div>
            </div>
    }

</div>
    @section Scripts {
        @Scripts.Render("~/bundles/jqueryval")
    }
